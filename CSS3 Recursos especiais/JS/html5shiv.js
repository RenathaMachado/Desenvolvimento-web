/ **
* @preserve HTML5 Shiv 3.7.3 | @afarkas @jdalton @jon_neal @rem | MIT / GPL2 Licenciado
* /
! função ( a , b ) { função  c ( a , b ) { var  c = a . createElement ( "p" ) , d = a . getElementsByTagName ( "head" ) [ 0 ] || a . documentElement ; retorno  c . innerHTML = "x <style>" + b + "</style>" , d. insertBefore ( c . lastChild , d . firstChild ) } função  d ( ) { var  a = t . elementos ; retornar "string" == tipo de  a ? a . divisão ( "" ) : a } função  e ( a , b ) { var  c = t . elementos ;"string" ! = tipo de  c && ( c = c . junção ( "" ) ) , "string" ! = tipo de  uma && ( a = a . junção ( "" ) ) , t . elementos = c + "" + a , j ( b ) } função  f ( a ) { var  b = s[ a [ q ] ] ; retorno  b || ( b = { } , r ++ , a [ q ] = r , s [ r ] = b ) , b } função  g ( a , c , d ) { if ( c || ( c = b ) , l ) Retorna c . createElement ( a ) ; d || ( d = f ( c ) ) ; var  e ; retornar  e = d . cache [ a ] ? d . cache [ a ] . cloneNode ( ) : p . teste ( a ) ? ( d . cache [ a ] = d. createElem ( a ) ) . cloneNode ( ) : d . createElem ( um ) , ! e . canHaveChildren || o . teste ( a ) || e . tagUrn ? e : d . frag . appendChild ( e ) } função  h ( a , c ) { if ( a|| ( a = b ) , l ) retorna  a . createDocumentFragment ( ) ; c = c || f ( a ) ; para ( var  e = c . frag . cloneNode ( ) , g = 0 , h = d ( ) , i = h . comprimento ; i > g ;g ++ ) e . createElement ( h [ g ] ) ; retornar  e } função  i ( a , b ) { b . cache || ( b . cache = { } , b . createElem = a . createElement , b . createFrag = a . createDocumentFragment , b . frag= b . createFrag ( ) ) , a . createElement = função ( c ) { return  t . shivMethods ? g ( c , a , b ) : b . createElem ( c ) } , a . createDocumentFragment = Função ( "h, f" , "função de retorno () {var n = f.cloneNode (), c = n.createElement; h.shivMethods && (" + d( ) . join ( ) . substituir ( / [ \ w \ - : ] + / g , função ( a ) { retornar  b . createElem ( a ) , b . frag . createElement ( a ) , 'c ("' + a + '")' } ) + "); retornar n}" ) ( t , b . frag) } função  j ( a ) { a || ( a = b ) ; var  d = f ( a ) ; voltar ! t . shivCSS || k || d . hasCSS || ( d . hasCSS = !! c ( a , "artigo, aparte, caixa de diálogo, figcaption, figura, rodapé, cabeçalho, hgroup, main, nav, seção {display: block} mark {background: # FF0; color: # 000} modelo {display: none} " )) , l || i ( a , d ) , a } var  k , l , m = "3.7.3" , n = a . html5 || { } , o = / ^ < | ^ (?: botão | mapa | selecione | área de texto | objeto | iframe | opção | grupo de opções ) $ / i, p = / ^ (?: a | b | código | div | conjunto de campos | h1 | h2 | h3 | h4 | h5 | h6 | i | label | li | ol | p | q | span | strong | style | table | tbody | td | th | tr | ul) $ / i , q = "_html5shiv" , r = 0 , s = { } ; ! function ( ) { tente { var  a = b . createElement ( "a" ) ; a . innerHTML = "<xyz> </xyz>" , k = "oculto" em  a , l = 1 == a . childNodes . comprimento|| function ( ) { b . createElement ( "a" ) ; var  a = b . createDocumentFragment ( ) ; retornar "indefinido" == tipo de  a . cloneNode || "indefinido" == tipo de  a . createDocumentFragment || "indefinido" == tipo de  a . createElement } ( ) } catch ( c ) {k = ! 0 , l = ! 0 } } ( ) ; var  t = { elementos : n . elementos || "abbr artigo à parte áudio bdi tela dados datalist detalhes diálogo figcaption figura rodapé cabeçalho hgroup principal marca medidor nav saída imagem progresso seção resumo modelo tempo vídeo" , versão : m , shivCSS : n . shivCSS ! ==! 1 , suporta elementos desconhecidos : l , shivMethods: n . shivMethods ! ==! 1 , digite : "padrão" , shivDocument : j , createElement : g , createDocumentFragment : h , addElements : e } ; a . html5 = t , j ( b ) , "objeto" == tipo de  módulo && módulo . exportações && ( módulo . exportações= T ) } ( "indefinido" ! = Typeof  janela ? Janela : esta , documento ) ;
